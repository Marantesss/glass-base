version: "3.1"

services:
  database:
    image: postgres:13.1-alpine
    restart: unless-stopped
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  pgAdmin:
    image: dpage/pgadmin4:4.27
    restart: unless-stopped
    ports:
      - ${PGADMIN_PORT}:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - database

  api:
    image: glass-base/api
    restart: unless-stopped
    build:
      context: ./api/
      dockerfile: Dockerfile
    volumes:
      - ./api/:/app
      - /app/node_modules
    ports:
      - ${APP_BACKEND_PORT}:${APP_BACKEND_PORT}
    environment:
      PORT: ${APP_BACKEND_PORT}
      DB_CLIENT: ${DB_CLIENT}
      DB_HOST: ${DB_HOST}
      DB_DATABASE: ${DB_DATABASE}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - database

  glass-base-app:
    image: glass-base/glass-base-app
    restart: unless-stopped
    build:
      context: ./glass-base-app/
      dockerfile: Dockerfile
    volumes:
      - ./glass-base-app/:/app
      - /app/node_modules
    ports:
      - ${APP_FRONTEND_PORT}:${APP_FRONTEND_PORT}
    environment:
      # Nuxt needs this variable (HOST) when started from a container,
      # otherwise you wonâ€™t be able to reach it.
      HOST: 0.0.0.0
      NUXT_ENV_PORT: ${APP_FRONTEND_PORT}
      NUXT_ENV_DOMAIN: ${APP_FRONTEND_DOMAIN}
      NUXT_ENV_API_PORT: ${APP_BACKEND_PORT}
      NUXT_ENV_API_DOMAIN: ${APP_BACKEND_DOMAIN}
      NUXT_ENV_GOOGLE_ANALYTICS_ID: ${GOOGLE_ANALYTICS_ID}

volumes:
  dbdata:
